{"version":3,"sources":["components/radio.jpg","components/Radio_dev.js","App.js","reportWebVitals.js","index.js"],"names":["Radio","useState","stations","setStations","stationFilter","setStationFilter","useEffect","setupApi","then","data","console","log","a","api","RadioBrowserApi","fetch","bind","window","searchStations","language","tag","limit","setDefaultSrc","event","target","src","defaultImage","className","map","filter","index","onClick","Carousel","interval","indicators","station","Item","favicon","alt","onError","name","urlResolved","showJumpControls","layout","customProgressBarSection","customControlsSection","autoPlayAfterSrcChange","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAAe,G,MAAA,IAA0B,mC,uBCQ1B,SAASA,IACtB,MAAgCC,qBAAhC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA0CF,mBAAS,OAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KAEAC,qBAAU,WACRC,EAASH,GAAeI,MAAK,SAAAC,GAC3BC,QAAQC,IAAIF,GACZN,EAAYM,QAEb,CAACL,IAEJ,IAAMG,EAAQ,uCAAG,WAAMH,GAAN,iBAAAQ,EAAA,6DACTC,EAAM,IAAIC,IAAgBC,MAAMC,KAAKC,QAAS,gBADrC,SAGQJ,EACpBK,eAAe,CACdC,SAAU,UACVC,IAAKhB,EACLiB,MAAO,KAERb,MAAK,SAAAC,GACJ,OAAOA,KAVI,cAGTP,EAHS,yBAaRA,GAbQ,2CAAH,sDA8BRoB,EAAgB,SAAAC,GACpBA,EAAMC,OAAOC,IAAMC,GAGrB,OACE,sBAAKC,UAAU,QAAf,UACE,qBAAKA,UAAU,UAAf,SApBY,CACd,MACA,YACA,UACA,QACA,QACA,QACA,OACA,MACA,MACA,QACA,QAUaC,KAAI,SAACC,EAAQC,GAAT,OACX,sBAEEH,UAAWvB,IAAkByB,EAAS,WAAa,GACnDE,QAAS,kBAAM1B,EAAiBwB,IAHlC,SAKGA,GAJIC,QAQX,qBAAKH,UAAU,qBAAf,SACA,cAACK,EAAA,EAAD,CAAUC,SAAU,KAAMC,YAAY,EAAtC,SACGhC,GACCA,EAAS0B,KAAI,SAACO,EAASL,GACrB,OACI,cAACE,EAAA,EAASI,KAAV,UACE,sBAAKT,UAAU,UAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,8BACE,qBACEF,IAAKU,EAAQE,QACbC,IAAI,eACJC,QAASjB,MAGb,qBAAKK,UAAU,OAAf,SAAuBQ,EAAQK,UAGjC,qBAAKb,UAAU,YAAf,SACE,cAAC,IAAD,CACEA,UAAU,SACVF,IAAKU,EAAQM,YACbC,kBAAkB,EAClBC,OAAO,UACPC,yBAA0B,GAC1BC,sBAAuB,CAAC,gBAAiB,mBACzCC,wBAAwB,QApBAhB,eCpCjCiB,MA9Bf,WACE,OACE,qBAAKpB,UAAU,MAAf,SAMI,cAAC3B,EAAD,OCFOgD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1C,MAAK,YAAkD,IAA/C2C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.05aac80c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/radio.66216f0c.jpg\";","import React, { useEffect, useState } from \"react\"\nimport { RadioBrowserApi } from \"radio-browser-api\"\nimport AudioPlayer from \"react-h5-audio-player\"\nimport \"react-h5-audio-player/lib/styles.css\"\nimport defaultImage from \"./radio.jpg\"\nimport Carousel from 'react-bootstrap/Carousel';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport default function Radio() {\n  const [stations, setStations] = useState()\n  const [stationFilter, setStationFilter] = useState(\"all\")\n\n  useEffect(() => {\n    setupApi(stationFilter).then(data => {\n      console.log(data)\n      setStations(data)\n    })\n  }, [stationFilter])\n\n  const setupApi = async stationFilter => {\n    const api = new RadioBrowserApi(fetch.bind(window), \"My Radio App\")\n\n    const stations = await api\n      .searchStations({\n        language: \"english\",\n        tag: stationFilter,\n        limit: 30,\n      })\n      .then(data => {\n        return data\n      })\n\n    return stations\n  }\n\n  const filters = [\n    \"all\",\n    \"classical\",\n    \"country\",\n    \"dance\",\n    \"disco\",\n    \"house\",\n    \"jazz\",\n    \"pop\",\n    \"rap\",\n    \"retro\",\n    \"rock\",\n  ]\n\n  const setDefaultSrc = event => {\n    event.target.src = defaultImage\n  }\n\n  return (\n    <div className=\"radio\">\n      <div className=\"filters\">\n        {filters.map((filter, index) => (\n          <span\n            key={index}\n            className={stationFilter === filter ? \"selected\" : \"\"}\n            onClick={() => setStationFilter(filter)}\n          >\n            {filter}\n          </span>\n        ))}\n      </div>\n      <div className=\"stations_carousel \">\n      <Carousel interval={null} indicators={false}>\n        {stations &&\n          stations.map((station, index) => {\n            return (\n                <Carousel.Item>\n                  <div className=\"station\" key={index}>\n                    <div className=\"stationName mt-3\">\n                      <div>\n                        <img\n                          src={station.favicon}\n                          alt=\"station logo\"\n                          onError={setDefaultSrc}\n                        />\n                        </div>\n                      <div className=\"name\">{station.name}</div>\n                    </div>\n\n                    <div className='w-75 mt-5'>\n                      <AudioPlayer\n                        className=\"player\"\n                        src={station.urlResolved}\n                        showJumpControls={false}\n                        layout=\"stacked\"\n                        customProgressBarSection={[]}\n                        customControlsSection={[\"MAIN_CONTROLS\", \"VOLUME_CONTROLS\"]}\n                        autoPlayAfterSrcChange={false}\n                      />\n                      </div>\n                  </div>\n                  {/*  <Carousel.Caption>\n                    {station.name}\n                  </Carousel.Caption> */} \n                </Carousel.Item>\n              \n            )\n          })}\n        </Carousel>\n      </div>\n    </div>\n  )\n}","//import { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\n//import logo from './logo.svg';\nimport './App.css';\nimport Radio from './components/Radio_dev';\n//import NoMatch from './components/NoMatch';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     {/*  <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Where the music start!\n        </p> */}\n        <Radio />\n              {/* <a\n                className='App'\n                href='/mm'\n                style={{textDecoration:'none'}}\n                >\n                  MM\n                </a> \n        <Router>\n          <Routes>\n                <Route exact path=\"/\" />\n                \n                <Route exact path=\"/mm\" component={Radio}/>\n               \n                <Route component={NoMatch} />\n          </Routes>\n        </Router>\n      </header>*/}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}